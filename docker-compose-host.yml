services:
  web:
    build: .
    command: ["python", "manage.py", "runserver", "0.0.0.0:8000"]
    volumes:
      - .:/app
      - /home/gabriele/energy_monitoring/static:/home/gabriele/energy_monitoring/static
    network_mode: host
    depends_on:
      - database
      - redis

  database:
    image: postgres:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    network_mode: host

  celery:
    build: .
    command: celery -A energy_monitoring worker --loglevel=info --concurrency=10
    volumes:
      - .:/app
    network_mode: host
    depends_on:
      - web
      - redis  # Ensure celery starts after redis

  celery-beat:
    build: .
    command: celery -A energy_monitoring beat --loglevel=info
    volumes:
      - .:/app
    network_mode: host
    depends_on:
      - redis

  redis:
    image: redis:alpine
    network_mode: host
      
volumes:
  postgres_data:
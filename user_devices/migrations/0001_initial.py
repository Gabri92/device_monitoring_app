# Generated by Django 5.1.1 on 2025-07-23 14:29

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('is_enabled', models.BooleanField(default=False, help_text='Enable/Disable monitoring for this device')),
                ('slave_id', models.IntegerField(blank=True, default=-1, help_text='Slave ID of the device(nr between 1 to 247)', null=True)),
                ('start_address', models.CharField(blank=True, default=0, help_text='Starting Modbus address in hexadecimal (e.g., 0x0280)', null=True)),
                ('bytes_count', models.PositiveIntegerField(blank=True, default=1, help_text='Total number of consecutive bytes to read', null=True)),
                ('port', models.IntegerField(blank=True, default=502, null=True)),
                ('show_energy', models.BooleanField(default=False, help_text='Show real time energy production/consumption')),
                ('show_energy_daily', models.BooleanField(default=False, help_text='Show daily energy production/consumption')),
                ('show_energy_weekly', models.BooleanField(default=False, help_text='Show weekly energy production/consumption')),
                ('show_energy_monthly', models.BooleanField(default=False, help_text='Show monthly energy production/consumption')),
                ('register_type', models.CharField(blank=True, choices=[('input', 'Input Register'), ('holding', 'Holding Register')], default='input', help_text='Type of Modbus register to read (Input or Holding)', max_length=10, null=True)),
                ('protocol', models.CharField(choices=[('modbus', 'MODBUS'), ('dlms', 'DLMS')], default='modbus', help_text='Type of protocol for the readings', max_length=10)),
                ('user', models.ManyToManyField(related_name='user_device', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ComputedVariable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('variable_type', models.CharField(choices=[('memory', 'Memory Mapping'), ('computed', 'Computed Variable')], default='memory', help_text='Choose the type of variable to configure (Memory Mapping or Computed Variable)', max_length=10)),
                ('var_name', models.CharField(help_text='Name of the variable (e.g., Voltage, Power)', max_length=100)),
                ('conversion_factor', models.CharField(default='1', help_text='Factor to convert raw data to physical value')),
                ('show_on_graph', models.BooleanField(default=False, help_text='Show this variable on the graph')),
                ('order', models.PositiveIntegerField(default=0)),
                ('formula', models.TextField(help_text="Formula to calculate the value (e.g., 'voltage * current'). Variables must match existing MemoryMapping variable names")),
                ('unit', models.CharField(help_text='Measurement unit (e.g., W, kW, etc.)', max_length=20)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='computed_variables', to='user_devices.device')),
            ],
            options={
                'ordering': ['order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DlmsMappingVariable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('variable_type', models.CharField(choices=[('memory', 'Memory Mapping'), ('computed', 'Computed Variable')], default='memory', help_text='Choose the type of variable to configure (Memory Mapping or Computed Variable)', max_length=10)),
                ('var_name', models.CharField(help_text='Name of the variable (e.g., Voltage, Power)', max_length=100)),
                ('unit', models.CharField(help_text='Measurement unit (e.g., V, A, W)', max_length=20)),
                ('conversion_factor', models.CharField(default='1', help_text='Factor to convert raw data to physical value')),
                ('show_on_graph', models.BooleanField(default=False, help_text='Show this variable on the graph')),
                ('order', models.PositiveIntegerField(default=0)),
                ('obis_code', models.CharField(default='', help_text='Address of the mapped value')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dlms_variables', to='user_devices.device')),
            ],
            options={
                'ordering': ['order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Gateway',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='not assigned', max_length=50)),
                ('ssh_username', models.CharField(default='ssh_user', max_length=50)),
                ('ssh_password', models.CharField(default='ssh_psw', max_length=100)),
                ('ip_address', models.CharField(max_length=50)),
                ('user', models.ManyToManyField(related_name='user_gateway', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DeviceData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.JSONField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('device_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='device_data', to='user_devices.device')),
                ('user', models.ManyToManyField(related_name='user_device_data', to=settings.AUTH_USER_MODEL)),
                ('Gateway', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gateway_data', to='user_devices.gateway')),
            ],
        ),
        migrations.AddField(
            model_name='device',
            name='Gateway',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='devices', to='user_devices.gateway'),
        ),
        migrations.CreateModel(
            name='Button',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=100)),
                ('pin_number', models.IntegerField()),
                ('is_active', models.BooleanField(default=False)),
                ('show_in_user_page', models.BooleanField(default=False)),
                ('Gateway', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='buttons', to='user_devices.gateway')),
            ],
        ),
        migrations.CreateModel(
            name='ModbusMappingVariable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('variable_type', models.CharField(choices=[('memory', 'Memory Mapping'), ('computed', 'Computed Variable')], default='memory', help_text='Choose the type of variable to configure (Memory Mapping or Computed Variable)', max_length=10)),
                ('var_name', models.CharField(help_text='Name of the variable (e.g., Voltage, Power)', max_length=100)),
                ('conversion_factor', models.CharField(default='1', help_text='Factor to convert raw data to physical value')),
                ('show_on_graph', models.BooleanField(default=False, help_text='Show this variable on the graph')),
                ('order', models.PositiveIntegerField(default=0)),
                ('address', models.CharField(default='', help_text='Address of the mapped value')),
                ('unit', models.CharField(help_text='Measurement unit (e.g., V, A, Hz)', max_length=20)),
                ('bit_length', models.PositiveIntegerField(choices=[(16, '16 bit'), (32, '32 bit'), (64, '64 bit')], default=16, help_text='Bit length of the register (16, 32, 64)')),
                ('is_signed', models.BooleanField(default=False, help_text='Interpret value as signed (True) or unsigned (False)')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modbus_variables', to='user_devices.device')),
            ],
            options={
                'ordering': ['order'],
                'abstract': False,
            },
        ),
    ]
